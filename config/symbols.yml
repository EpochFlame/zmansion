global:
    0x80005bdc: main
    0x80005760: gameInit
    0x8000b7f4: gameRun
    
    0x8035a550: __vt__22EnemyStrategyDecorator
    0x8035a574: __vt__13EnemyStrategy
    0x804d2e60: __RTTI__13JORReflexible
    0x804d2e68: __RTTI__13EnemyStrategy
    0x804d2e70: __RTTI__22EnemyStrategyDecorator
    
    0x800c2238: __ct__13EnemyStrategyFv
    0x800c2260: __dt__13EnemyStrategyFv
    0x800c22ac: init__13EnemyStrategyFv
    0x800c22b0: update__13EnemyStrategyFv
    0x800c230c: doBehavior__13EnemyStrategyFv
    0x800c2310: doBehaviorInit__13EnemyStrategyFv
    0x800c2314: FUN_800c1314__13EnemyStrategyFv
    0x800c231c: FUN_800c231c__13EnemyStrategyFv
    0x800c2320: setNextState__13EnemyStrategyFs
    0x800c2328: changeState__13EnemyStrategyFv
    
    0x800c2370: __nw__13EnemyStrategyFUlPv
    0x800c2378: __dl__13EnemyStrategyFPv
    
    0x800c237c: __ct__22EnemyStrategyDecoratorFv
    0x8006b02c: __dt__22EnemyStrategyDecoratorFv
    0x800c23bc: trySetTsuriStrategy__22EnemyStrategyDecoratorFP13EnemyStrategy
    0x800c23dc: update__22EnemyStrategyDecoratorFv
    
    #0x804d632c: __RTTI__Q24Koga14CharacterEvent
    0x800ea1b4: __ct__Q24Koga14CharacterEventFRCi
    
    #0x8034b8ec: __vt__Q24Koga8Observer<Q24Koga14CharacterEvent,b>
    #0x804d1d3c: __RTTI__Q24Koga8Observer<Q24Koga14CharacterEvent,b>
    
    0x80364088: __vt__Q24Koga22CharacterEventObserver
    0x804d3f70: __RTTI__Q24Koga22CharacterEventObserver
    
    0x800ea1dc: receiveMessage__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea368: onEnteredFlashlightBeam__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea370: onCaptureBegin__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea378: onCaptureEnd__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea380: FUN_800ea380__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea388: onCollideWithPlayer__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea390: onSprayedWithFire__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea398: onSprayedWithIce__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea3a0: onSprayedWithWater__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea3a8: onHitWithFireBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea3d4: onHitWithIceBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea400: onHitWithWaterBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea42c: onFishingBegin__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea434: onPlayerLeftRoom__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea43c: onPlayerEnteredRoom__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea444: onPlayerTapped__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea44c: FUN_800ea44c__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x8035a380: __vt__15IncludeStrategy
    0x804d2dd0: __RTTI__15IncludeStrategy
    
    0x800bebf4: __ct__15IncludeStrategyFv
    0x800bec3c: __dt__15IncludeStrategyFv
    0x800bec9c: replaceStrategy__15IncludeStrategyFl
    0x800becf4: destroyStrategy__15IncludeStrategyFv
    
    0x800c2224: getInitFunc__Fl
    0x801ce904: __dl__FPv
    
    0x801412d4: calculateTransformMatrix__6EnReelFv
    0x801413e4: getScaleModifier__6EnReelFv
    0x801413ec: setScaleModifier__6EnReelFf

    0x8000965c: calculateLookAtAngle__Fff
    0x80127870: func_80127870__Ff
    0x804dc55c: DEG_TO_RAD
    0x804dc560: ANGLE_TO_FLOAT

    # SDK Symbols
    # Base
    0x801d9f7c: PPCMfmsr
    0x801d9f84: PPCMtmsr
    0x801d9f8c: PPCMfhid0
    0x801d9f94: PPCMfl2cr
    0x801d9f9c: PPCMtl2cr
    0x801d9fa4: PPCMtdec
    0x801d9fac: PPCSync
    0x801d9fb4: PPCHalt
    0x801d9fc8: PPCMfhid2
    0x801d9fd0: PPCMthid2
    0x801d9fd8: PPCMtwpar
    
    # OS
    # Before EXI
    0x801d9fe0: OSGetConsoleType
    0x801da008: OSInit
    0x801da2e4: OSExceptionInit
    0x801da564: __OSDBINTSTAR
    0x801da588: __OSDBJump
    0x801da58c: __OSSetExceptionHandler
    0x801da5a8: __OSGetExceptionHandler
    
    # OSExceptionVector
    0x801da5bc: __OSEVStar
    0x801da614: __DBVECTO
    0x801da624: __OSEVSetNumbe
    0x801da654: __OSEVEn
    
    0x801da658: OSDefaultExceptionHandler
    0x801da6ac: __OSPSInit
    0x801da6e4: __OSGetDIConfig
    0x801da6f8: OSInitAlarm
    0x801da744: OSCreateAlarm
    0x801da750: InsertAlarm
    0x801da9a0: OSSetAlarm
    0x801daa08: OSSetPeriodicAlarm
    0x801daa6c: OSCancelAlarm
    0x801dab88: DecrementerExceptionCallback
    0x801dad98: DecrementerExceptionHandler
    0x801dade4: OSAllocFromHeap
    0x801daee0: OSInitAlloc
    0x801daf50: OSGetArenaHi
    0x801daf58: OSGetArenaLo
    0x801daf60: OSSetArenaHi
    0x801daf68: OSSetArenaLo
    0x801daf70: __OSInitAudioSystem
    0x801db104: __OSStopAudioSystem
    0x801db1dc: DCEnable
    0x801db1f0: DCInvalidateRange
    0x801db220: DCFlushRange
    0x801db254: DCStoreRange
    0x801db288: DCFlushRangeNoSync
    0x801db2b8: DCZeroRange
    0x801db2e8: ICInvalidateRange
    0x801db320: ICFlashInvalidate
    0x801db330: ICEnable
    0x801db344: __LCEnable
    0x801db410: LCEnable
    0x801db448: LCDisable
    0x801db470: LCLoadBlocks
    0x801db494: LCStoreBlocks
    0x801db4b8: LCQueueWait
    0x801db4d0: L2GlobalInvalidate
    0x801db568: DMAErrorHandler
    0x801db6c8: __OSCacheInit
    0x801db7bc: __OSLoadFPUContext
    0x801db8e0: __OSSaveFPUContext
    0x801dba08: OSSetCurrentContext
    0x801dba64: OSGetCurrentContext
    0x801dba70: OSSaveContext
    0x801dbaf0: OSLoadContext
    0x801dbbc8: OSGetStackPointer
    0x801dbbd0: OSClearContext
    0x801dbbf4: OSInitContext
    0x801dbcb0: OSDumpContext
    0x801dbf58: OSSwitchFPUContext
    0x801dbfdc: __OSContextInit
    0x801dc024: OSFillFPUContext
    0x801dc150: OSReport
    0x801dc1d0: OSPanic
    0x801dc2fc: OSSetErrorHandler # ?
    0x801dc318: __OSUnhandledException
    
    # After EXI
    0x801ddab8: OSGetFontEncode
    0x801ddb10: OSDisableInterrupts
    0x801ddb24: OSEnableInterrupts
    0x801ddb38: OSRestoreInterrupts
    0x801ddb5c: __OSSetInterruptHandler
    0x801ddb78: __GetInterruptHandler
    0x801ddb8c: __OSInterruptInit
    0x801ddc00: SetInterruptMask
    0x801ddeb0: __OSMaskInterrupts
    0x801ddf38: __OSUnmaskInterrupts
    0x801ddfc0: __OSDispatchInterrupt
    0x801de2e4: ExternalInterruptHandler
    0x801de330: __OSModuleInit
    0x801de348: OSInitMessageQueue
    0x801de3a8: OSSendMessage
    0x801de470: OSReceiveMessage
    0x801de54c: OSInitMutex
    0x801de584: OSLockMutex
    0x801de660: OSUnlockMutex
    0x801de728: __OSUnlockAllMutex
    0x801de798: Run
    0x801de7d8: Callback_os
    0x801de7e4: __OSReboot
    0x801de994: OSRegisterResetFunction
    0x801dea18: Reset
    0x801dea88: __OSDoHotReset
    0x801dead0: OSResetSystem
    0x801dec88: __OSResetSWInterruptHandler
    0x801ded7c: OSGetResetButtonState
    0x801def70: WriteSramCallback
    0x801defd0: WriteSram
    0x801df0e8: __OSInitSram
    0x801df21c: __OSLockSram
    0x801df278: __OSLockSramEx
    0x801df2d4: UnlockSram
    0x801df5dc: __OSUnlockSram
    0x801df600: __OSUnlockSramEx
    0x801df624: __OSSyncSram
    0x801df634: OSGetSoundMode
    0x801df6b4: OSSetSoundMode
    0x801df758: OSGetProgressiveMode
    0x801df7d8: OSSetProgressiveMode
    
    # After SI
    0x801e01fc: __OSSystemCallVectorStar
    0x801e0218: __OSSystemCallVectorEn
    0x801e021c: __OSInitSystemCall
    0x801e0280: __OSThreadInit
    0x801e03a8: OSInitThreadQueue
    0x801e03b8: OSGetCurrentThread
    0x801e03c4: OSIsThreadTerminated
    0x801e03f8: OSDisableScheduler
    0x801e0438: OSEnableScheduler
    0x801e0478: UnsetRun
    0x801e04e0: __OSGetEffectivePriority
    0x801e051c: SetEffectivePriority
    0x801e06dc: __OSPromoteThread
    0x801e072c: SelectThread
    0x801e092c: __OSReschedule
    0x801e095c: OSCreateThread
    0x801e0a7c: OSExitThread
    0x801e0b60: OSCancelThread
    0x801e0d1c: OSDetachThread
    0x801e0dbc: OSResumeThread
    0x801e1044: OSSuspendThread
    0x801e11b4: OSSleepThread
    0x801e12a0: OSWakeupThread
    0x801e13a4: OSGetThreadPriority
    0x801e13ac: OSGetTime
    0x801e13c4: OSGetTick
    0x801e13cc: __OSGetSystemTime
    0x801e1430: GetDates
    0x801e15cc: OSTicksToCalendarTime
    
    # After EXI UART
    0x801e1a20: __init_user
    0x801e1a40: __init_cpp
    0x801e1a94: _ExitProcess
    
    # EXI
    0x801dc48c: SetExiInterruptMask
    0x801dc580: EXIImm
    0x801dc7dc: EXIImmEx
    0x801dc87c: EXIDma
    0x801dc968: EXISync
    0x801dcb70: EXIClearInterrupts
    0x801dcbb8: EXISetExiCallback
    0x801dcc34: __EXIProbe
    0x801ef56c: EXIProbe # Located inside CARD
    0x801dcd9c: EXIProbeEx
    0x801dcdfc: EXIAttach
    0x801dcee0: EXIDetach
    0x801dcf9c: EXISelect
    0x801dd0c8: EXIDeselect
    0x801dd1d8: EXIIntrruptHandler
    0x801dd258: TCIntrruptHandler
    0x801dd44c: EXTIntrruptHandler
    0x801dd4f8: EXIInit
    0x801dd5fc: EXILock
    0x801dd6f0: EXIUnlock
    0x801dd7cc: EXIGetState
    0x801dd7e4: EXIGetID
    
    # DB
    0x801e1ab4: DBInit
    0x801e1adc: __DBExceptionDestinationAux
    0x801e1b24: __DBExceptionDestination
    0x801e1b34: __DBIsExceptionMarked
    0x801e1b50: DBPrintf
    
    # EXI UART
    0x801e17d0: InitializeUART
    0x801e1818: ReadUARTN
    0x801e1820: WriteUARTN
    
    # SI
    0x801df87c: SIBusy
    0x801df89c: CompleteTransfer
    0x801dfae0: SIInterruptHandler
    0x801dfbf8: SIInit
    0x801dfc6c: __SITransfer
    0x801dfe74: SIGetStatus
    0x801dfe84: SISetCommand
    0x801dfe98: SITransferCommands
    0x801dfea8: SISetXY
    0x801dff08: SIEnablePolling
    0x801dffa4: SIDisablePolling
    0x801e0010: SIGetResponse
    0x801e0034: AlarmHandler_si
    0x801e00c0: SITransfer
    
    # MTX
    0x801e1ba0: PSMTXIdentity
    0x801e1bcc: PSMTXCopy
    0x801e1c00: PSMTXConcat
    0x801e1ccc: PSMTXTranspose
    0x801e1d1c: PSMTXInverse
    0x801e1e20: C_MTXRotRad
    0x801e1e90: C_MTXRotTrig
    0x801e1f94: C_MTXRotAxisRad
    0x801e20ac: C_MTXTrans
    0x801e20e8: C_MTXScale
    0x801e2120: C_MTXLookAt
    0x801e22ac: C_MTXLightPerspective
    0x801e2378: C_MTXLightOrtho
    0x801e2400: C_MTXFrustum
    0x801e249c: C_MTXPerspective
    0x801e256c: C_MTXOrtho
    0x801e2604: PSVECAdd
    0x801e2628: PSVECSubtract
    0x801e264c: PSVECScale
    0x801e266c: PSVECNormalize
    0x801e26b4: PSVECSquareMag
    0x801e26d0: C_VECMag
    0x801e2758: PSVECDotProduct
    0x801e2778: PSVECCrossProduct
    0x801e27b4: C_VECReflect
    0x801e2888: PSVECSquareDistance
    0x801e28b0: c_VECDistance
    0x801e2938: PSMTXMultVec
    0x801e298c: C_MTXMultVecSR
    
    # DVD
    0x801e2a08: __DVDInitWA
    0x801e2a48: __DVDInterruptHandler
    0x801e2d30: AlarmHandler_dvdlow
    0x801e2db4: AlarmHandlerForTimeout_dvdlow
    0x801e2e24: Read
    0x801e2f2c: SeekTwiceBeforeRead
    0x801e2fac: DVDLowRead
    0x801e3244: DVDLowSeek
    0x801e32cc: DVDLowWaitCoverClose
    0x801e32ec: DVDLowReadDiskID
    0x801e338c: DVDLowStopMotor
    0x801e3410: DVDLowRequestError
    0x801e3494: DVDLowInquiry
    0x801e3528: DVDLowAudioStream
    0x801e35b4: DVDLowRequestAudioStatus
    0x801e3634: DVDLowAudioBufferConfig
    0x801e36d0: DVDLowReset
    0x801e378c: DVDLowDoBreak
    0x801e3800: SetBreakAlarm
    0x801e3864: DVDLowBreak
    0x801e390c: DVDLowClearCallback
    0x801e3924: __DVDLowSetWAType
    0x801e3968: __DVDFSInit
    0x801e39a0: DVDConvertPathToEntrynum
    0x801e3c80: DVDOpen
    0x801e3d48: DVDClose
    0x801e3d6c: entryToPath
    0x801e3ecc: DVDGetCurrentDir
    0x801e3f90: DVDReadAsyncPrio
    0x801e4050: cbForReadAsync
    0x801e4080: DVDReadPrio
    0x801e4198: cbForReadSync
    0x801e41bc: DVDReadDir
    0x801e4260: DVDCloseDir
    0x801e4268: DVDPrepareStreamAsync
    0x801e4354: cbForPrepareStreamAsync
    0x801e4384: DVDInit
    0x801e4480: stateReadingFST
    0x801e44d4: cbForStateReadingFST
    0x801e4554: cbForStateError
    0x801e45fc: stateTimeout
    0x801e4698: stateGettingError
    0x801e46c0: CategorizeError
    0x801e4774: cbForStateGettingError
    0x801e4a08: cbForUnrecoveredError
    0x801e4a70: cbForUnrecoveredErrorRetry
    0x801e4b08: stateGoToRetry
    0x801e4b30: cbForStateGoToRetry
    0x801e4c88: stateCheckID
    0x801e4d6c: stateCheckID3
    0x801e4da0: stateCheckID2
    0x801e4dd8: cbForStateCheckID1
    0x801e4eec: cbForStateCheckID2
    0x801e4f90: cbForStateCheckID3
    0x801e508c: AlarmHandler_dvd
    0x801e50d0: stateCoverClosed
    0x801e519c: stateCoverClosed_CMD
    0x801e51cc: cbForStateCoverClosed
    0x801e523c: stateMotorStopped
    0x801e5264: cbForStateMotorStopped
    0x801e5348: stateReady
    0x801e5590: stateBusy
    0x801e5850: cbForStateBusy
    0x801e5e24: issueCommand
    0x801e5ee0: DVDReadAbsAsyncPrio
    0x801e5fbc: DVDReadAbsAsyncPrioForBS
    0x801e608c: DVDReadDiskID
    0x801e6160: DVDPrepareStreamAbsAync
    0x801e6224: DVDCancelStream
    0x801e62ec: DVDReset
    0x801e6330: DVDGetCommandBlockStatus
    0x801e637c: DVDGetDriveStatus
    0x801e6428: DVDCancelAsync
    0x801e6698: DVDCancel
    0x801e6744: cbForCancelSync
    0x801e6768: DVDGetCurrentDiskID
    0x801e6770: DVDCheckDisk
    0x801e6854: __DVDPrepareResetAsync
    0x801e6970: __DVDClearWaitingQueue
    0x801e69a8: __DVDPushWaitingQueue
    0x801e6a10: __DVDPopWaitingQueue
    0x801e6ab0: __DVDCheckWaitingQueue
    0x801e6b08: __DVDDequeueWaitingQueue
    0x801e6b68: __DVDStoreErrorCode
    0x801e6cc0: DVDCompareDiskID
    0x801e6d98: __fstLoad
    
    # VI
    0x801e6ee8: __VIRetraceHandler
    0x801e70f8: VISetPreRetraceCallback
    0x801e713c: getTiming
    0x801e71a4: __VIInit
    0x801e738c: VIInit
    0x801e77c0: VIWaitForRetrace
    0x801e7814: setFbbRegs
    0x801e7ae8: setVerticalRegs
    0x801e7c88: VIConfigure
    0x801e8338: VIFlush
    0x801e843c: VISetNextFrameBuffer
    0x801e84a8: VISetBlack
    0x801e8524: VIGetRetraceCount
    0x801e852c: getCurrentFieldEvenOdd
    0x801e85e8: VIGetNextField
    0x801e86dc: VIGetScanMode
    0x801e86e8: VIGetDTVStatus
    
    # PAD
    0x801e8724: ClampStick
    0x801e8854: PADClamp
    0x801e895c: DoReset
    0x801e8a30: PADProbeCallback
    0x801e8c0c: UpdateOrigin
    0x801e8da0: PADOriginCallback
    0x801e8ebc: PADOriginUpdateCallback
    0x801e8ef8: PADFixCallback
    0x801e914c: PADResetCallback
    0x801e987c: PADReset
    0x801e99e8: PADRecalibrate
    0x801e9b3c: PADInit
    0x801e9d00: PADReceiveCheckCallback
    0x801e9e5c: PADRead
    0x801ea194: PADSetSamplingRate
    0x801ea244: PADControlMotor
    0x801ea300: PADSetSpec
    0x801ea360: SPEC0_MakeStatus
    0x801ea4d4: SPEC1_MakeStatus
    0x801ea648: SPEC2_MakeStatus
    0x801eaa40: PADSetAnalogMode
    0x801eaab8: OnReset_pad
    
    # AI
    0x801eabd4: AIRegisterDMACallback
    0x801eac18: AIInitDMA
    0x801eaca0: AIStartDMA
    0x801eacb8: AIGetStreamSampleCount
    0x801eacc8: AIResetStreamSampleCount
    0x801eace0: AIGetStreamTrigger
    0x801eacf0: AISetStreamPlayState
    0x801eadc8: AIGetStreamPlayState
    0x801eadd8: AISetDSPSampleRate
    0x801eaeb8: AIGetDSPSampleRate
    0x801eaecc: AISetStreamSampleRate
    0x801eaef4: __AI_set_stream_sample_rate
    0x801eafc8: AIGetStreamSampleRate
    0x801eafd8: AISetStreamVolLeft
    0x801eaff4: AIGetStreamVolLeft
    0x801eb004: AISetStreamVolRight
    0x801eb020: AIGetStreamVolRight
    0x801eb030: AIInit
    0x801eb194: __AISHandler
    0x801eb210: __AIDHandler
    0x801eb2a0: __AICallbackStackSwitch
    0x801eb2f8: __AI_SRC_INIT
    
    # AR
    0x801eb4dc: ARRegisterDMACallback
    0x801eb520: ARStartDMA
    0x801eb610: ARAlloc
    0x801eb678: ARInit
    0x801eb76c: ARGetBaseAddress
    0x801eb774: ARGetSize
    0x801eb77c: __ARHandler
    0x801eb7f4: __ARChecksize
    0x801ec6c0: __ARQServiceQueueLo
    0x801ec7c0: __ARQCallbackHack
    0x801ec7c4: __ARQInterruptServiceRoutine
    0x801ec890: ARQInit
    0x801ec8f8: ARQPostRequest
    
    # DSP
    0x801eca54: DSPCheckMailToDSP
    0x801eca64: DSPCheckMailFromDSP
    0x801eca74: DSPReadMailFromDSP
    0x801eca8c: DSPSendMailToDSP
    
    # CARD
    0x801ecaa0: __CARDDefaultApiCallback
    0x801ecaa4: __CARDSyncCallback
    0x801ecad8: __CARDExtHandler
    0x801ecba4: __CARDExiHandler
    0x801eccbc: __CARDTxHandler
    0x801ecd64: __CARDUnlockedHandler
    0x801ecde8: __CARDReadNintendoID
    0x801ecef4: __CARDEnableInterrupt
    0x801ecfb4: __CARDReadStatus
    0x801ed0a4: __CARDClearStatus
    0x801ed150: TimeoutHandler
    0x801ed1f4: Retry
    0x801ed420: UnlockedCallback
    0x801ed530: __CARDStart
    0x801ed6d0: __CARDReadSegment
    0x801ed808: __CARDWritePage
    0x801ed928: __CARDEraseSector
    0x801eda04: CARDInit
    0x801eda94: __CARDSetDiskID
    0x801edab0: __CARDGetControlBlock
    0x801edb60: __CARDPutControlBlock
    0x801edbb0: CARDFreeBlocks
    0x801edcd0: __CARDSync
    0x801edd68: OnReset_card
    0x8019eec0: bitrev
    0x8019ef40: ReadArrayUnlock
    0x8019f0c0: GetInitVal
    0x8019f120: DummyLen
    0x8019f1c0: __CARDUnlock
    0x8019f480: DoneCallback
    0x801eddb8: BlockReadCallback
    0x801ede94: __CARDRead
    0x801edef8: BlockWriteCallback
    0x801edfd4: __CARDWrite
    0x801ee038: __CARDGetFatBlock
    0x801ee040: WriteCallback_fat
    0x801ee114: EraseCallback_fat
    0x801ee1dc: __CARDAllocBlock
    0x801ee2f4: __CARDUpdateFatBlock
    0x801ee3a0: __CARDGetDirBlock
    0x801ee3a8: WriteCallback_dir
    0x801ee478: EraseCallback_dir
    0x801ee540: __CARDUpdateDir
    0x801ee604: __CARDCheckSum
    0x801ee7b4: VerifyID
    0x801eea38: VerifyDir
    0x801eec78: VerifyFAT
    0x801eeefc: __CARDVerify
    0x801eef88: CARDCheckExAsync
    0x801ef518: CARDCheck
    0x801ef58c: CARDProbeEx
    0x801ef6f0: DoMount
    0x801efaa8: __CARDMountCallback
    0x801efbb0: CARDMountAsync
    0x801efd38: CARDMount
    0x801efd80: DoUnmount
    0x801efe1c: CARDUnmount
    0x801efec8: FormatCallback
    0x801f000c: __CARDFormatRegionAsync
    0x801f0664: CARDFormat
    0x801f06ac: __CARDCompareFileName
    0x801f0714: __CARDAccess
    0x801f07a0: __CARDIsPublic
    0x801f07d0: CARDOpen
    0x801f0944: CARDClose
    0x801f0998: CreateCallbackFat
    0x801f0ac8: CARDCreateAsync
    0x801f0ce0: CARDCreate
    0x801f0d28: __CARDSeek
    0x801f0ee0: ReadCallback
    0x801f1010: CARDReadAsync
    0x801f1154: CARDRead
    0x801f119c: WriteCallback_3
    0x801f130c: EraseCallback_3
    0x801f13bc: CARDWriteAsync
    0x801f14cc: CARDWrite
    0x801f1514: UpdateIconOffsets
    0x801f170c: CARDGetStatus
    0x801f1834: CARDSetStatusAsync
    0x801f19a4: CARDSetStatus
    
    # GX
    0x801f19ec: __GXDefaultTexRegionCallback
    0x801f1a68: __GXDefaultTlutRegionCallback
    0x801f1a8c: GXInit
    0x801f29cc: GXCPInterruptHandler
    0x801f2b08: GXInitFifoBase
    0x801f2b74: GXInitFifoPtrs
    0x801f2be4: GXInitFifoLimits
    0x801f2bf0: GXSetCPUFifo
    0x801f2d00: GXSetGPFifo
    0x801f2e78: GXSaveCPUFifo
    0x801f2e98: __GXSaveCPUFifoAux
    0x801f2f74: __GXFifoInit
    0x801f2fb8: __GXFifoReadEnable
    0x801f2fe0: __GXFifoReadDisable
    0x801f3004: __GXFifoLink
    0x801f3048: __GXWriteFifoIntEnable
    0x801f3094: __GXWriteFifoIntReset
    0x801f30e0: GXGetCPUFifo
    0x801f30e8: __GXXfVtxSpecs
    0x801f3240: GXSetVtxDesc
    0x801f3578: GXSetVtxDescv
    0x801f38d4: __GXSetVCD
    0x801f3a3c: GXGetVtxDesc
    0x801f3bf0: GXGetVtxDescv
    0x801f3c60: GXClearVtxDesc
    0x801f3cac: GXSetVtxAttrFmt
    0x801f4008: GXSetVtxAttrFmtv
    0x801f4384: __GXSetVAT
    0x801f4420: GXGetVtxAttrFmt
    0x801f4668: GXGetVtxAttrFmtv
    0x801f46dc: GXSetArray
    0x801f4768: GXInvalidateVtxCache
    0x801f4778: GXSetTexCoordGen2
    0x801f4a48: GXSetNumTexGens
    0x801f4a90: GXSetMisc
    0x801f4ae8: GXFlush
    0x801f4b50: GXDrawDone
    0x801f4bd0: GXPixModeSync
    0x801f4bf4: GXPokeAlphaMode
    0x801f4c08: GXPokeAlphaRead
    0x801f4c1c: GXPokeAlphaUpdate
    0x801f4c38: GXPokeBlendMode
    0x801f4cc0: GXPokeColorUpdate
    0x801f4cdc: GXPokeDstAlpha
    0x801f4cf0: GXPokeDither
    0x801f4d0c: GXPokeZMode
    0x801f4d34: GXTokenInterruptHandler
    0x801f4dbc: GXFinishInterruptHandler
    0x801f4e40: __GXPEInit
    0x801f4ec0: __GXSetDirtyState
    0x801f4f4c: GXBegin
    0x801f5028: __GXSendFlushPrim
    0x801f50b0: GXSetLineWidth
    0x801f5108: GXSetPointSize
    0x801f515c: GXEnableTexOffsets
    0x801f51c0: GXSetCullMode
    0x801f5210: GXSetCoPlanar
    0x801f5254: __GXSetGenMode
    0x801f5278: GXSetDispCopySrc
    0x801f5338: GXSetTexCopySrc
    0x801f53f8: GXSetDispCopyDst
    0x801f543c: GXSetTexCopyDst
    0x801f55ac: GXSetDispCopyFrame2Field
    0x801f55d8: GXSetCopyClamp
    0x801f5654: GXSetDispCopyYScale
    0x801f5710: GXSetCopyClear
    0x801f5778: GXSetCopyFilter
    0x801f59a0: GXSetDispCopyGamma
    0x801f59bc: GXCopyDisp
    0x801f5b2c: GXCopyTex
    0x801f5cbc: GXClearBoundingBox
    0x801f5cf4: GXInitLightAttn
    0x801f5d10: GXInitLightSpot
    0x801f5e90: GXInitLightDistAttn
    0x801f5f60: GXInitLightPos
    0x801f5f70: GXInitLightDir
    0x801f5f8c: GXInitSpecularDir
    0x801f6060: GXInitLightColor
    0x801f6088: GXLoadLightObjImm
    0x801f61cc: GXSetChanAmbColor
    0x801f6334: GXSetChanMatColor
    0x801f649c: GXSetNumChans
    0x801f64e8: GXSetChanCtrl
    0x801f66cc: GXGetTexBufferSize
    0x801f6828: __GetImageTileCount
    0x801f68f0: GXInitTexObj
    0x801f6b44: GXInitTexObjCI
    0x801f6b8c: GXInitTexObjLOD
    0x801f6d20: GXGetTexObjFmt
    0x801f6d28: GXLoadTexObjPreLoaded
    0x801f6ed0: GXLoadTexObj
    0x801f6f24: GXInitTlutObj
    0x801f6f6c: GXLoadTlut
    0x801f7008: GXInitTexCacheRegion
    0x801f7128: GXInitTlutRegion
    0x801f7170: GXInvalidateTexAll
    0x801f71b8: GXSetTexRegionCallback
    0x801f71cc: GXSetTlutRegionCallback
    0x801f71e0: __SetSURegs
    0x801f72ac: __GXSetSUTexRegs
    0x801f7418: GXSetTevIndirect
    0x801f74b4: GXSetIndTexMtx
    0x801f7614: GXSetIndTexCoordScale
    0x801f77e8: GXSetIndTexOrder
    0x801f7920: GXSetNumIndStages
    0x801f794c: GXSetTevDirect
    0x801f7994: GXSetTevIndWarp
    0x801f79f8: __GXUpdateBPMask
    0x801f7ac4: __GXFlushTextureState
    0x801f7ae8: GXSetTevOp
    0x801f7c8c: GXSetTevColorIn
    0x801f7d0c: GXSetTevAlphaIn
    0x801f7d90: GXSetTevColorOp
    0x801f7e50: GXSetTevAlphaOp
    0x801f7f10: GXSetTevColor
    0x801f7f84: GXSetTevColorS10
    0x801f7ff8: GXSetTevKColor
    0x801f806c: GXSetTevKColorSel
    0x801f80d8: GXSetTevKColorAlphaSel
    0x801f8144: GXSetTevSwapMode
    0x801f819c: GXSetTevSwapModeTable
    0x801f823c: GXSetAlphaCompare
    0x801f828c: GXSetZTexture
    0x801f8310: GXSetTevOrder
    0x801f84b0: GXSetNumTevStages
    0x801f84e4: GXSetFog
    0x801f8698: GXInitFogAdjTable
    0x801f8860: GXSetFogRangeAdj
    0x801f8960: GXSetBlendMode
    0x801f8a64: GXSetColorUpdate
    0x801f8aa4: GXSetAlphaUpdate
    0x801f8ae4: GXSetZMode
    0x801f8b5c: GXSetZCompLoc
    0x801f8b9c: GXSetPixelFmt
    0x801f8cac: GXSetDither
    0x801f8cec: GXSetDstAlpha
    0x801f8d40: GXSetFieldMask
    0x801f8d78: GXSetFieldMode
    0x801f8df8: Subdivide
    0x801f91ac: GXDrawCylinder
    0x801f9878: GXDrawCubeFace
    0x801f9a90: GXDrawCube
    0x801f9ce0: GXDrawSphere1
    0x801f9df4: __GXSetRange
    0x801f9df8: GXBeginDisplayList
    0x801f9ec0: GXEndDisplayList
    0x801f9f94: GXCallDisplayList
    0x801fa004: GXSetProjection
    0x801fa0d8: WriteMTXPS4x3
    0x801fa10c: WriteMTXPS3x3from3x4
    0x801fa140: WriteMTXPS3x3
    0x801fa16c: WriteMTXPS4x2
    0x801fa190: GXLoadPosMtxImm
    0x801fa20c: GXLoadNrmMtxImm
    0x801fa24c: GXSetCurrentMtx
    0x801fa288: GXLoadTexMtxImm
    0x801fa30c: GXSetViewportJitter
    0x801fa428: GXSetViewport
    0x801fa44c: GXSetScissor
    0x801fa4fc: GXSetScissorBoxOffset
    0x801fa540: GXSetClipMode
    0x801fa568: __GXSetMatrixIndex
    
    # hvqm4dec
    0x801fa5ec: init_global_constants
    0x801fa94c: setHVQPlaneDesc
    0x801faa68: readTree
    0x801fad34: getByte
    0x801fad98: Ipic_BasisNumDec
    0x801fb05c: IpicDcvDec
    0x801fb198: getDeltaDC
    0x801fb1d8: reset_PB_dc
    0x801fb248: MakeNest
    0x801fc018: IpicBlockDec
    0x801fc15c: IpicLineDec
    0x801fc230: IpicPlaneDec
    0x801fc30c: initMcHandler
    0x801fd428: setMCNextBlk
    0x801fe830: spread_PB_descMap
    0x801fec60: BpicPlaneDec
    0x801ff09c: HVQM4InitDecoder
    0x801ff0bc: HVQM4InitSeqObj
    0x801ff0e0: HVQM4BuffSize
    0x801ff154: HVQM4SetBuffer
    0x801ff5b8: HVQM4DecodeIpic
    0x801ffac8: HVQM4DecodePpic
    0x801ffaec: HVQM4DecodeBpic
    
    # Runtime
    0x80200094: __va_arg
    0x80200188: __destroy_global_chain
    0x802001d0: __register_global_object
    0x802001e8: __dt__Q23std9exceptionFv
    0x80200254: what__Q23std9exceptionFPc
    0x80200260: __destroy_new_array
    0x802002dc: __destroy_arr
    0x80200354: __construct_array
    0x80200454: __dt__26__partial_array_destructorFv
    0x8020050c: __construct_new_array
    0x80200614: __throw_catch_compare
    0x80200840: FUN_80200840 # ?
    0x80200868: terminate
    0x80200890: FUN_80200890 # ?
    0x802008b8: FUN_802008b8 # ?
    0x802008d8: __ptmf_scall
    0x80200900: dynamic_cast
    0x80200b64: __dt__Q23std8bad_castFv
    0x80200be0: __dt__Q23std10bad_typeidFv
    0x80200c5c: what__Q23std10bad_typeidFPc
    0x80200c68: what__Q23std8bad_castFPc
    0x80200c74: ExPPC_LongJmp
    0x80200ce8: __throw
    0x80200d9c: __end__catch
    0x80200de0: ExPPC_ThrowHandler
    0x80201230: FUN_80201230 # ?
    0x802013f8: __dt__Q23std13bad_exceptionFv
    0x8020147c: ExPPC_UnwindStack
    0x802019f0: ExPPC_PopStackFrame
    0x80201be0: ExPPC_NextAction
    0x80201dfc: ExPPC_FindExceptionRecord
    0x80201fd0: ExPPC_FindExceptionFragment
    0x80202068: __unregister_fragment
    0x8020209c: __register_fragment
    0x802020d8: what__Q23std13bad_exceptionFPc
    0x802020e4: __cvt_fp2unsigned
    0x80202140: __save_fpr
    0x8020218c: __restore_fpr
    0x802021d8: __div2u
    0x802022c4: __div2i
    0x802023fc: __mod2u
    0x802024e0: __mod2i
    0x802025ec: __shl2i
    0x80202610: __shr2u
    0x80202634: __shr2i
    0x8020265c: GetR2__Fv
    0x80202664: __fini_cpp_exceptions
    0x80202698: __init_cpp_exceptions
    0x802026d8: abort
    0x80202758: exit
    0x80202864: FUN_80202864 # ?
    0x80202898: __num2dec
    0x80202c4c: abs
    0x80202c5c: __flush_buffer
    0x80202d28: __prep_buffer
    0x80202d5c: __kill_critical_regions
    0x80202d60: toupper
    0x80202d88: tolower
    0x80202db0: fwrite
    0x8020308c: wcstombs
    0x802030c8: memcmp
    0x8020310c: memchr
    0x80203138: memmove
    0x80203214: __copy_longs_rev_unaligned
    0x802032c4: __copy_longs_unaligned
    0x80203388: __copy_longs_rev_aligned
    0x80203434: __copy_longs_aligned
    0x802034f0: __stdio_atexit
    0x802034f4: sprintf
    0x802035c8: snprintf
    0x80203698: vsnprintf
    0x80203708: printf
    0x80203784: __StringWrite
    0x802037f0: __FileWrite
    0x80203848: __pformatter
    0x80203e78: float2str
    #0x802044b8: round_decimal
    0x802045e4: longlong2str
    0x802048c4: long2str
    0x80204ae8: parse_format
    0x80204fc0: FUN_80204fc0 # ?
    0x80204fc8: rand
    0x8020507c: FUN_8020507c # ?
    0x80205130: strstr
    0x8020519c: strrchr
    0x802051e4: strchr
    0x80205214: strcmp
    0x80205338: strncat
    0x80205384: strcat
    0x802053b0: strncpy
    0x802053f4: strcpy
    0x802054a8: strlen
    0x802054c8: strtol
    0x8020558c: strtoul
    0x8020567c: FUN_8020567c # ?
    0x80205728: __strtoul
    0x80205a70: __close_console
    0x80205a78: __write_console
    0x80205b10: __read_console
    0x80205bf0: fwide
    0x80205c70: frexp
    0x80205d0c: fabsf__Ff
    0x80205d14: atanf
    0x80205f08: atan
    0x80205f28: _inv_sqrtf
    0x80205f98: FUN_80205f98 # ?
    0x80205fdc: atan2f
    0x802060b4: FUN_802060b4 # ?
    0x8020615c: FUN_8020615c # ?
    0x80206204: tanf
    0x80206248: cos
    0x80206268: sin
    0x80206288: cosf
    0x8020641c: sinf
    0x802065c0: __sinit_trif_c
    0x802065f0: powf
    